- name: install nodejs
  hosts: backend.vijayjohn.online
  become: yes
  tasks:
  - name: disable nodjs
    ansible.builtin.command: dnf module disable nodejs -y
  - name: enable nodjs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: add user
    ansible.builtin.user:
      name: expense

  - name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download the application from url
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unarchive the application
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes 

  - name: run npm
    community.general.npm:
      path: /app

  - name: copy backend.servce
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: install mysql libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - PyMySQL
    - cryptography

  - name: install mysql
    ansible.builtin.package:
      name: mysql
      state: present

  - name: load schema
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.vijayjohn.online
      target: /app/schema/backend.sql

  - name: daemon-reload
    ansible.builtin.systemd_service:
      name: backend
      daemon-reload: true
      state: restarted
      enabled: true